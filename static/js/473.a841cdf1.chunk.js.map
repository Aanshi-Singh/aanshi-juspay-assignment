{"version":3,"file":"static/js/473.a841cdf1.chunk.js","mappings":"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","sources":["components/ecommerce-analytics/MetricCard.jsx","components/ecommerce-analytics/MetricsGrid.jsx","components/ecommerce-analytics/ProjectionsVsActualsChart.jsx","components/ecommerce-analytics/RevenueChart.jsx","components/ecommerce-analytics/RevenueByLocation.jsx","components/ecommerce-analytics/TopSellingProducts.jsx","components/ecommerce-analytics/TotalSales.jsx","components/Analytics.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Box\n} from '@mui/material';\nimport {\n  TrendingUpOutlined as TrendingUpOutlinedIcon,\n  TrendingDown as TrendingDownIcon\n} from '@mui/icons-material';\nimport { useTheme } from '../../contexts/ThemeContext.jsx';\n\nconst MetricCard = ({\n  title,\n  value,\n  change,\n  trend = 'up', // 'up', 'down'\n  backgroundColor = 'transparent',\n  sx = {}\n}) => {\n  const { mode } = useTheme();\n  const getTrendIcon = () => {\n    if (trend === 'down') {\n      return <TrendingDownIcon sx={{ fontSize: 16, color: 'black' }} />;\n    }\n    return <TrendingUpOutlinedIcon sx={{ fontSize: 16, color: 'black' }} />;\n  };\n\n  return (\n    <Card\n      sx={{\n        backgroundColor: backgroundColor,\n        borderRadius: 2, // 16px\n        boxShadow: 'none',\n        border: 'none',\n        p: 1.5,\n        ...sx\n      }}\n    >\n      <CardContent sx={{ p: 0, '&:last-child': { pb: 0 } }}>\n        <Box sx={{ \n          p: 1.5, // 12px padding\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          height: '100%'\n        }}>\n          {/* Title */}\n          <Typography \n            sx={{ \n              color: 'black',\n              fontWeight: 600,\n              fontSize: '14px',\n              fontStyle: 'normal'\n            }}\n          >\n            {title}\n          </Typography>\n          \n          {/* Value and Change Row */}\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'space-between',\n            mt: 1\n          }}>\n            <Typography \n              sx={{ \n                fontWeight: 600,\n                fontSize: '24px',\n                fontStyle: 'normal',\n                color: 'black',\n                mr: 1,\n              }}\n            >\n              {value}\n            </Typography>\n            \n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n              <Typography \n                sx={{ \n                  fontSize: '12px',\n                  fontWeight: 400,\n                  color: 'black'\n                }}\n              >\n                {change}\n              </Typography>\n              {getTrendIcon()}\n            </Box>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MetricCard;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport MetricCard from './MetricCard.jsx';\nimport metricsData from './metricsData.json';\n\nconst MetricsGrid = ({ sx = {} }) => {\n  return (\n    <Box sx={{ \n      width: '100%', \n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr',\n      gap: 2,\n      ...sx \n    }}>\n      {metricsData.metrics.map((metric) => (\n        <MetricCard\n          key={metric.id}\n          title={metric.title}\n          value={metric.value}\n          change={metric.change}\n          trend={metric.trend}\n          backgroundColor={metric.backgroundColor}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default MetricsGrid;\n","import * as React from \"react\";\r\nimport { BarChart } from \"@mui/x-charts\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"../../contexts/ThemeContext.jsx\";\r\n\r\nconst chartData = [\r\n  { month: \"Jan\", projection: 22, actual: 18 },\r\n  { month: \"Feb\", projection: 25, actual: 20 },\r\n  { month: \"Mar\", projection: 20, actual: 17 },\r\n  { month: \"Apr\", projection: 28, actual: 22 },\r\n  { month: \"May\", projection: 16, actual: 13 },\r\n  { month: \"Jun\", projection: 24, actual: 20 }\r\n];\r\n\r\nexport default function ProjectionsVsActualsChart() {\r\n  const { mode } = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: \"#F7F9FB\",\r\n        borderRadius: 2, // 16px (theme.spacing(2) usually = 16px)\r\n        p: 3,\r\n      }}\r\n    >\r\n      <Typography \r\n        sx={{\r\n          fontSize: '12px',\r\n          fontWeight: 600\r\n        }}\r\n      >\r\n        Projections vs Actuals\r\n      </Typography>\r\n      <BarChart\r\n        height={180} // set height here\r\n        width={300}\r\n        margin={{\r\n          left: -20, // negative margin to push chart to the left edge\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0\r\n        }}\r\n        series={[\r\n          {\r\n            data: chartData.map(d => d.actual),\r\n            label: \"Actuals\",\r\n            stack: \"total\",\r\n            color: \"#b1cce0\",\r\n            borderRadius: { topLeft: 4, topRight: 4, bottomLeft: 0, bottomRight: 0 },\r\n          },\r\n          {\r\n            data: chartData.map(d => Math.max(0, d.projection - d.actual)),\r\n            label: \"Projections\",\r\n            stack: \"total\",\r\n            color: \"#e6eef4\",\r\n            borderRadius: { topLeft: 4, topRight: 4, bottomLeft: 0, bottomRight: 0 },\r\n          }\r\n        ]}\r\n        xAxis={[\r\n          {\r\n            data: chartData.map(d => d.month),\r\n            scaleType: \"band\",\r\n            categoryGapRatio: 0.5,\r\n            barGapRatio: -0.2,\r\n            tickLabelStyle: {\r\n              fill: \"#1C1C1C66\",\r\n              fontSize: \"12px\"\r\n            }\r\n          }\r\n        ]}\r\n        yAxis={[\r\n          {\r\n            tickLabelStyle: {\r\n              fill: \"#1C1C1C66\",\r\n              fontSize: \"12px\",\r\n            },\r\n            disableLine: true,\r\n            disableTicks: true,\r\n            minDistance: 20,\r\n          }\r\n        ]}\r\n        sx={{\r\n          \"& .MuiChartsAxis-bottom .MuiChartsAxis-line\": {\r\n            stroke: \"#C4C4C4\",\r\n            strokeWidth: 1,\r\n          },\r\n          \"& .MuiChartsLegend-root\": { display: \"none\" },\r\n          background: \"#F7F9FB\",\r\n          borderRadius: \"16px\",\r\n        }}\r\n        slotProps={{\r\n          bar: {\r\n            borderRadius: 4,\r\n            barSize: 20, // bar width set here\r\n          }\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useTheme } from \"../../contexts/ThemeContext.jsx\";\n\nconst chartData = [\n  { month: \"Jan\", current: 12, previous: 15 },\n  { month: \"Feb\", current: 8, previous: 20 },\n  { month: \"Mar\", current: 10, previous: 13 },\n  { month: \"Apr\", current: 16, previous: 15 },\n  { month: \"May\", current: 20, previous: 12 },\n  { month: \"Jun\", current: 24, previous: 18 },\n];\n\nexport default function RevenueChart() {\n  const { mode } = useTheme();\n  \n  return (\n    <Box sx={{ \n      background: mode === 'dark' ? '#1a1a1a' : '#F7F9FB', \n      p: 2, \n      borderRadius: 3,\n      border: mode === 'dark' ? '1px solid #333' : 'none'\n    }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Typography \n          sx={{\n            fontSize: '14px',\n            fontWeight: 600,\n            mr: 2\n          }}\n        >\n          Revenue\n        </Typography>\n        \n        {/* Vertical Divider */}\n        <Box sx={{ \n          width: '1px', \n          height: '20px', \n          backgroundColor: '#E0E0E0', \n          mr: 2 \n        }} />\n        \n        {/* Legend */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Box sx={{ \n              width: 8, \n              height: 8, \n              borderRadius: '50%',\n              backgroundColor: 'black' \n            }} />\n            <Typography sx={{ fontSize: '12px', fontWeight: 400, color: '#666' }}>\n              Current Week\n            </Typography>\n            <Typography sx={{ fontSize: '14px', fontWeight: 600, color: 'black' }}>\n              $58,211\n            </Typography>\n          </Box>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Box sx={{ \n              width: 8, \n              height: 8, \n              borderRadius: '50%',\n              backgroundColor: '#97bbda' \n            }} />\n            <Typography sx={{ fontSize: '12px', fontWeight: 400, color: '#666' }}>\n              Previous Week\n            </Typography>\n            <Typography sx={{ fontSize: '14px', fontWeight: 600, color: 'black' }}>\n              $68,768\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      \n        <LineChart\n        series={[\n          {\n            data: chartData.map((d) => d.current),\n            color: \"#222\",\n            curve: \"monotoneX\",\n            showMark: false,\n            dashed: [5, 5], // for dashed line effect\n            lineWidth: 3\n          },\n          {\n            data: chartData.map((d) => d.previous),\n            color: \"#97bbda\",\n            curve: \"monotoneX\",\n            showMark: false,\n            lineWidth: 3\n          },\n        ]}\n        xAxis={[{\n          data: chartData.map((d) => d.month),\n          scaleType: \"band\"\n        }]}\n        height={260}\n        width={480}\n        margin={{ left: -40, bottom: 30, right: 30, top: 30 }}\n        legend={{\n          display: false\n        }}\n        grid={{ vertical: false, horizontal: true }}\n        sx={{\n          \"& .MuiChartsAxis-root\": {\n            color: mode === 'dark' ? '#fff' : '#000'\n          },\n          \"& .MuiChartsAxis-tickLabel\": {\n            color: mode === 'dark' ? '#fff' : '#000'\n          },\n          \"& .MuiChartsLegend-root\": {\n            color: mode === 'dark' ? '#fff' : '#000'\n          }\n        }}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useTheme } from \"../../contexts/ThemeContext.jsx\";\nimport worldmapImage from \"../../assets/WorldMap.png\";\n\n// Data\nconst locations = [\n  { city: \"New York\", value: 72, dot: { left: \"30%\", top: \"32%\" } },\n  { city: \"San Francisco\", value: 39, dot: { left: \"15%\", top: \"35%\" } },\n  { city: \"Sydney\", value: 25, dot: { left: \"82%\", top: \"70%\" } },\n  { city: \"Singapore\", value: 61, dot: { left: \"70%\", top: \"55%\" } }\n];\nconst maxValue = 72;\n\nfunction WorldMapWithDots() {\n  // Use your SVG map or a public domain map here\n  return (\n    <Box sx={{ position: \"relative\", width: \"100%\", height: 82, mb: 2 }}>\n      <img\n        src={worldmapImage}\n        alt=\"World Map\"\n        style={{\n          width: \"100%\",\n          height: 82,\n          objectFit: \"cover\",\n          opacity: 0.32,\n          borderRadius: 8\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default function RevenueByLocationFullCard() {\n  const { mode } = useTheme();\n  \n  return (\n    <Box sx={{ \n      bgcolor: mode === 'dark' ? '#1a1a1a' : '#F7F9FB', \n      p: 2.5, \n      borderRadius: 4, \n      width: 180,\n      border: mode === 'dark' ? '1px solid #333' : 'none'\n    }}>\n      <Typography fontWeight={700} fontSize={15} gutterBottom>\n        Revenue by Location\n      </Typography>\n      <WorldMapWithDots />\n      {locations.map(loc => (\n        <Box key={loc.city} sx={{ mb: 2 }}>\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 0.5 }}>\n            <Typography sx={{ fontSize: 12, fontWeight: 400 }}>{loc.city}</Typography>\n            <Typography sx={{ fontWeight: 400, fontSize: 12 }}>{loc.value}K</Typography>\n          </Box>\n          <Box\n            sx={{\n              height: 3,\n              width: \"100%\",\n              bgcolor: \"#e3f0fc\",\n              borderRadius: 2,\n              position: \"relative\"\n            }}\n          >\n            <Box\n              sx={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n                bottom: 0,\n                width: `${(loc.value / maxValue) * 100}%`,\n                bgcolor: mode === 'dark' ? '#A8C5DA' : '#b4d0ee',\n                borderRadius: 2,\n              }}\n            />\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n","import React from \"react\";\r\nimport { Box, Typography, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\r\nimport { useTheme } from \"../../contexts/ThemeContext.jsx\";\r\n\r\nconst products = [\r\n  { name: \"ASOS Ridley High Waist\", price: \"$79.49\", quantity: 82, amount: \"$6,518.18\" },\r\n  { name: \"Marco Lightweight Shirt\", price: \"$128.50\", quantity: 37, amount: \"$4,754.50\" },\r\n  { name: \"Half Sleeve Shirt\", price: \"$39.99\", quantity: 64, amount: \"$2,559.36\" },\r\n  { name: \"Lightweight Jacket\", price: \"$20.00\", quantity: 184, amount: \"$3,680.00\" },\r\n  { name: \"Marco Shoes\", price: \"$79.49\", quantity: 64, amount: \"$1,965.81\" },\r\n];\r\n\r\nexport default function TopSellingProducts() {\r\n  const { mode } = useTheme();\r\n  \r\n  return (\r\n    <Box sx={{ \r\n      bgcolor: mode === 'dark' ? '#1a1a1a' : '#F7F9FB', \r\n      borderRadius: 3, \r\n      p: 2, \r\n      maxWidth: 490,\r\n      border: mode === 'dark' ? '1px solid #333' : 'none'\r\n    }}>\r\n      <Typography fontWeight={600} fontSize={14} gutterBottom>\r\n        Top Selling Products\r\n      </Typography>\r\n      <Table sx={{\r\n        borderCollapse: \"collapse\",\r\n        background: mode === 'dark' ? '#1a1a1a' : '#F7F9FB',\r\n        mt: 1\r\n      }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell sx={{ \r\n              color: mode === 'dark' ? '#ccc' : '#1C1C1C66', \r\n              fontWeight: 400, \r\n              borderBottom: mode === 'dark' ? '1px solid #444' : '1px solid #ededed', \r\n              fontSize: 12,\r\n              padding: '8px 12px 8px 12px'\r\n            }}>Name</TableCell>\r\n            <TableCell sx={{ \r\n              color: mode === 'dark' ? '#ccc' : '#1C1C1C66', \r\n              fontWeight: 400, \r\n              borderBottom: mode === 'dark' ? '1px solid #444' : '1px solid #ededed', \r\n              fontSize: 12,\r\n              padding: '8px 12px 8px 12px'\r\n            }}>Price</TableCell>\r\n            <TableCell sx={{ \r\n              color: mode === 'dark' ? '#ccc' : '#1C1C1C66', \r\n              fontWeight: 400, \r\n              borderBottom: mode === 'dark' ? '1px solid #444' : '1px solid #ededed', \r\n              fontSize: 12,\r\n              padding: '8px 12px 8px 12px'\r\n            }}>Quantity</TableCell>\r\n            <TableCell sx={{ \r\n              color: mode === 'dark' ? '#ccc' : '#1C1C1C66', \r\n              fontWeight: 400, \r\n              borderBottom: mode === 'dark' ? '1px solid #444' : '1px solid #ededed', \r\n              fontSize: 12,\r\n              padding: '8px 12px 8px 12px'\r\n            }}>Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {products.map((row, i) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell\r\n                sx={{\r\n                  borderBottom: \"none\",\r\n                  fontSize: 12,\r\n                  fontWeight: 400,\r\n                  color: mode === 'dark' ? '#fff' : 'black',\r\n                  padding: '8px 12px 8px 12px'\r\n                }}\r\n              >\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  borderBottom: \"none\",\r\n                  fontSize: 12,\r\n                  fontWeight: 400,\r\n                  color: mode === 'dark' ? '#fff' : 'black',\r\n                  padding: '8px 12px 8px 12px'\r\n                }}\r\n              >\r\n                {row.price}\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  borderBottom: \"none\",\r\n                  fontSize: 12,\r\n                  fontWeight: 400,\r\n                  color: mode === 'dark' ? '#fff' : 'black',\r\n                  padding: '8px 12px 8px 12px'\r\n                }}\r\n              >\r\n                {row.quantity}\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  borderBottom: \"none\",\r\n                  fontSize: 12,\r\n                  fontWeight: 400,\r\n                  color: mode === 'dark' ? '#fff' : 'black',\r\n                  padding: '8px 12px 8px 12px'\r\n                }}\r\n              >\r\n                {row.amount}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Typography, Stack } from \"@mui/material\";\r\nimport { PieChart } from \"@mui/x-charts/PieChart\";\r\nimport { useTheme } from \"../../contexts/ThemeContext.jsx\";\r\n\r\nconst salesData = [\r\n  { label: \"Direct\", value: 300.56, color: \"#000000\" },\r\n  { label: \"Affiliate\", value: 135.18, color: \"#BAEDBD\" },\r\n  { label: \"Sponsored\", value: 154.02, color: \"#95A4FC\" },\r\n  { label: \"E-mail\", value: 48.96, color: \"#B1E3FF\" }\r\n];\r\n\r\nexport default function TotalSales() {\r\n  const { mode } = useTheme();\r\n\r\n  return (\r\n    <Box sx={{\r\n      bgcolor: mode === 'dark' ? '#1a1a1a' : '#F7F9FB',\r\n      borderRadius: 2, // 16px\r\n      p: 3,\r\n      width: 240,\r\n      border: mode === 'dark' ? '1px solid #333' : 'none',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start'\r\n    }}>\r\n      <Typography \r\n        sx={{ \r\n          fontWeight: 600, \r\n          fontSize: '14px',\r\n          color: 'black',\r\n          mb: 2\r\n        }}\r\n      >\r\n        Total Sales\r\n      </Typography>\r\n      \r\n      <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', mb: 2, position: 'relative' }}>\r\n        <PieChart\r\n          series={[\r\n            {\r\n              data: salesData.map((item) => ({\r\n                value: item.value,\r\n                // label: item.label,\r\n                color: item.color\r\n              })),\r\n              innerRadius: 40,\r\n              outerRadius: 60,\r\n              cornerRadius: 4,\r\n              paddingAngle: 2,\r\n            }\r\n          ]}\r\n          width={120}\r\n          height={120}\r\n         \r\n          sx={{\r\n            \"& .MuiChartsAxis-root\": {\r\n              color: mode === 'dark' ? '#fff' : '#000'\r\n            },\r\n            \"& .MuiChartsAxis-tickLabel\": {\r\n              color: mode === 'dark' ? '#fff' : '#000'\r\n            }\r\n          }}\r\n        />\r\n        \r\n        {/* Center percentage badge */}\r\n        <Box sx={{\r\n          position: 'absolute',\r\n          left: '35%',\r\n          top: '80%',\r\n          transform: 'translate(-50%, -50%)',\r\n          bgcolor: '#4A4A4A',\r\n          borderRadius: 1,\r\n          px: 1,\r\n          py: 0.5,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          minWidth: 40\r\n        }}>\r\n          <Typography sx={{ \r\n            color: 'white', \r\n            fontWeight: 600, \r\n            fontSize: '12px' \r\n          }}>\r\n            38.6%\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      \r\n      <Stack spacing={1} sx={{ width: '100%' }}>\r\n        {salesData.map((item, idx) => (\r\n          <Box key={item.label} sx={{ \r\n            display: \"flex\", \r\n            alignItems: \"center\", \r\n            justifyContent: 'space-between',\r\n            width: '100%'\r\n          }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Box sx={{\r\n                width: 8,\r\n                height: 8,\r\n                bgcolor: item.color,\r\n                borderRadius: \"50%\",\r\n                mr: 1\r\n              }} />\r\n              <Typography sx={{\r\n                fontWeight: 500,\r\n                fontSize: '14px',\r\n                color: mode === 'dark' ? '#fff' : '#000'\r\n              }}>\r\n                {item.label}\r\n              </Typography>\r\n            </Box>\r\n            <Typography sx={{\r\n              fontWeight: 500,\r\n              fontSize: '14px',\r\n              color: mode === 'dark' ? '#fff' : '#000'\r\n            }}>\r\n              ${item.value.toFixed(2)}\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Box, Typography, Grid } from '@mui/material';\nimport MetricsGrid from './ecommerce-analytics/MetricsGrid.jsx';\nimport ProjectionsVsActualsChart from './ecommerce-analytics/ProjectionsVsActualsChart.jsx';\nimport RevenueChart from './ecommerce-analytics/RevenueChart.jsx';\nimport RevenueByLocation from './ecommerce-analytics/RevenueByLocation.jsx';\nimport TopSellingProducts from './ecommerce-analytics/TopSellingProducts.jsx';\nimport TotalSales from './ecommerce-analytics/TotalSales.jsx';\n\nconst Analytics = () => {\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography  \n        sx={{ \n          mb: 4, \n          fontWeight: 600,\n          fontSize: '14px',\n          fontStyle: 'normal',\n          color: 'text.primary'\n        }}\n      >\n        eCommerce\n      </Typography>\n      \n      {/* Main Content Grid */}\n      <Grid container spacing={3} alignItems=\"flex-start\">\n        {/* Left Half - Metrics Grid */}\n        <Grid item xs={12} md={6}>\n          <MetricsGrid />\n        </Grid>\n        \n        {/* Right Half - Chart */}\n        <Grid item xs={12} md={6}>\n          <ProjectionsVsActualsChart />\n        </Grid>\n      </Grid>\n      \n      {/* Second Row - Revenue Components */}\n      <Grid container spacing={3} sx={{ mt: 3 }} alignItems=\"flex-start\">\n        {/* Left Half - Revenue Chart */}\n        <Grid item xs={12} md={8}>\n          <RevenueChart />\n        </Grid>\n        \n        {/* Right Half - Revenue by Location */}\n        <Grid item xs={12} md={4}>\n          <RevenueByLocation />\n        </Grid>\n      </Grid>\n      \n      {/* Third Row - Final Components */}\n      <Grid container spacing={3} sx={{ mt: 3 }} alignItems=\"flex-start\">\n        {/* Left Half - Top Selling Products */}\n        <Grid item xs={12} md={8}>\n          <TopSellingProducts />\n        </Grid>\n        \n        {/* Right Half - Total Sales */}\n        <Grid item xs={12} md={4}>\n          <TotalSales />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Analytics;\n"],"names":["_ref","title","value","change","trend","backgroundColor","sx","mode","useTheme","_jsx","Card","_objectSpread","borderRadius","boxShadow","border","p","children","CardContent","pb","_jsxs","Box","height","display","flexDirection","justifyContent","Typography","color","fontWeight","fontSize","fontStyle","alignItems","mt","mr","gap","TrendingDownIcon","TrendingUpOutlinedIcon","width","gridTemplateColumns","metricsData","map","metric","MetricCard","id","chartData","month","projection","actual","ProjectionsVsActualsChart","background","BarChart","margin","left","right","top","bottom","series","data","d","label","stack","topLeft","topRight","bottomLeft","bottomRight","Math","max","xAxis","scaleType","categoryGapRatio","barGapRatio","tickLabelStyle","fill","yAxis","disableLine","disableTicks","minDistance","stroke","strokeWidth","slotProps","bar","barSize","current","previous","RevenueChart","mb","LineChart","curve","showMark","dashed","lineWidth","legend","grid","vertical","horizontal","locations","city","dot","WorldMapWithDots","position","src","worldmapImage","alt","style","objectFit","opacity","RevenueByLocationFullCard","bgcolor","gutterBottom","loc","concat","products","name","price","quantity","amount","TopSellingProducts","maxWidth","Table","borderCollapse","TableHead","TableRow","TableCell","borderBottom","padding","TableBody","row","i","salesData","TotalSales","PieChart","item","innerRadius","outerRadius","cornerRadius","paddingAngle","transform","px","py","minWidth","Stack","spacing","idx","toFixed","Analytics","Grid","container","xs","md","MetricsGrid","RevenueByLocation"],"sourceRoot":""}