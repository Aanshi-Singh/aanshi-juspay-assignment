{"version":3,"file":"static/js/880.76591182.chunk.js","mappings":"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","sources":["components/SearchFilterBar.jsx","components/CustomPagination.jsx","components/OrderList.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, TextField, InputAdornment, IconButton, Tooltip } from '@mui/material';\r\nimport { Search as SearchIcon, Add as AddIcon, FilterList as FilterIcon, UnfoldMore as SortIcon } from '@mui/icons-material';\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { LuArrowDownUp } from \"react-icons/lu\";\r\nimport { useTheme } from '../contexts/ThemeContext.jsx';\r\n\r\nconst SearchFilterBar = ({ searchTerm, onSearchChange, onSortToggle, sortDirection }) => {\r\n  const { mode } = useTheme();\r\n  \r\n  return (\r\n    <Box \r\n      sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        p: 1, // 8px padding\r\n        backgroundColor: mode === 'light' ? '#F7F9FB' : '#2C2C2C',\r\n        borderRadius: 2, // 8px border radius\r\n        mb: 2\r\n      }}\r\n    >\r\n      {/* Left side - Icons */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}> {/* 8px gap */}\r\n        <Tooltip title=\"Add new item\">\r\n          <IconButton \r\n            size=\"20px\"\r\n            sx={{ \r\n              width: 20, \r\n              height: 20,\r\n              color: mode === 'light' ? 'text.primary' : '#ffffff66',\r\n              borderRadius: 1,\r\n              cursor: 'not-allowed',\r\n              '&:hover': {\r\n                backgroundColor: 'action.hover',\r\n                transform: 'scale(1.05)',\r\n                borderRadius: 1,\r\n              }\r\n            }}\r\n          >\r\n            <AddIcon sx={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        \r\n        <Tooltip title=\"Filter options\">\r\n          <IconButton \r\n            size=\"20px\"\r\n            sx={{ \r\n              width: 20, \r\n              height: 20,\r\n              color: mode === 'light' ? 'text.primary' : '#ffffff66',\r\n              borderRadius: 1,\r\n              cursor: 'not-allowed',\r\n              '&:hover': {\r\n                backgroundColor: 'action.hover',\r\n                transform: 'scale(1.05)',\r\n                borderRadius: 1,\r\n              }\r\n            }}\r\n          >\r\n            <FilterIcon sx={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        \r\n        <Tooltip title={`Sort by user name (${sortDirection === 'asc' ? 'Descending' : 'Ascending'})`}>\r\n          <IconButton \r\n            size=\"20px\"\r\n            onClick={onSortToggle}\r\n            sx={{ \r\n              \r\n              color: mode === 'light' ? 'text.primary' : '#ffffff66',\r\n              borderRadius: 1,\r\n              p: 0,\r\n              '&:hover': {\r\n                backgroundColor: 'action.hover',\r\n                transform: 'scale(1.05)',\r\n                borderRadius: 1,\r\n              },\r\n              '&.active': {\r\n                color: 'primary.main',\r\n                backgroundColor: 'primary.light',\r\n              }\r\n            }}\r\n          >\r\n            <LuArrowDownUp size={20}/>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      {/* Right side - Search */}\r\n      <TextField\r\n        placeholder=\"Search\"\r\n        value={searchTerm}\r\n        onChange={(e) => onSearchChange(e.target.value)}\r\n        size=\"small\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <FiSearch sx={{ fontSize: 20, color: mode === 'light' ? '#1C1C1C33' : '#ffffff66' }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{\r\n          minWidth: 200,\r\n          '& .MuiOutlinedInput-root': {\r\n            backgroundColor: mode === 'light' ? 'white' : '#4A4A4A',\r\n            borderRadius: '8px',\r\n            '& fieldset': {\r\n              borderColor: mode === 'light' ? '#1C1C1C33' : '#ffffff66',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: mode === 'light' ? '#1C1C1C33' : '#ffffff66',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: mode === 'light' ? '#1C1C1C33' : '#ffffff66',\r\n            },\r\n          },\r\n          '& .MuiInputBase-input::placeholder': {\r\n            color: mode === 'light' ? '#1C1C1C33' : '#ffffff66',\r\n            opacity: 1,\r\n          },\r\n          '& .MuiInputBase-input': {\r\n            color: mode === 'light' ? 'black' : 'white',\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchFilterBar;\r\n","import React from 'react';\r\nimport { Box, IconButton, Typography } from '@mui/material';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\r\n\r\nconst CustomPagination = ({ \r\n  currentPage, \r\n  totalPages, \r\n  onPageChange, \r\n  onPrevious, \r\n  onNext \r\n}) => {\r\n  const getPageNumbers = () => {\r\n    const pages = [];\r\n    const maxVisiblePages = 5;\r\n    \r\n    if (totalPages <= maxVisiblePages) {\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      if (currentPage <= 3) {\r\n        for (let i = 1; i <= 5; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else if (currentPage >= totalPages - 2) {\r\n        for (let i = totalPages - 4; i <= totalPages; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n          pages.push(i);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return pages;\r\n  };\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <Box \r\n      sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        gap: 1,\r\n        p: 1,\r\n        backgroundColor: 'background.paper',\r\n        maxWidth: 'fit-content'\r\n      }}\r\n    >\r\n      {/* Previous Arrow */}\r\n      <IconButton\r\n        onClick={onPrevious}\r\n        disabled={currentPage === 1}\r\n        sx={{\r\n          p: 0.5,\r\n          color: 'text.primary',\r\n          '&:disabled': {\r\n            color: 'text.disabled',\r\n          },\r\n          '&:hover': {\r\n            backgroundColor: 'action.hover',\r\n          }\r\n        }}\r\n      >\r\n        <KeyboardArrowLeft />\r\n      </IconButton>\r\n\r\n      {/* Page Numbers */}\r\n      {pageNumbers.map((page) => (\r\n        <Box\r\n          key={page}\r\n          onClick={() => onPageChange(page)}\r\n          sx={{\r\n            minWidth: 32,\r\n            height: 32,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: 1,\r\n            cursor: 'pointer',\r\n            backgroundColor: page === currentPage ? 'action.selected' : 'transparent',\r\n            color: page === currentPage ? 'text.primary' : 'text.secondary',\r\n            fontWeight: page === currentPage ? 'bold' : 'normal',\r\n            '&:hover': {\r\n              backgroundColor: page === currentPage ? 'action.selected' : 'action.hover',\r\n            },\r\n            transition: 'all 0.2s ease',\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 'inherit' }}>\r\n            {page}\r\n          </Typography>\r\n        </Box>\r\n      ))}\r\n\r\n      {/* Next Arrow */}\r\n      <IconButton\r\n        onClick={onNext}\r\n        disabled={currentPage === totalPages}\r\n        sx={{\r\n          p: 0.5,\r\n          color: 'text.primary',\r\n          '&:disabled': {\r\n            color: 'text.disabled',\r\n          },\r\n          '&:hover': {\r\n            backgroundColor: 'action.hover',\r\n          }\r\n        }}\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomPagination;\r\n","import React, { useState, useMemo } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Checkbox,\n  Avatar,\n  Box,\n  Typography,\n  FormControl,\n  Select,\n  MenuItem,\n  Tooltip,\n  IconButton,\n  Fade,\n  Slide,\n  Grow\n} from '@mui/material';\nimport { useSidebar } from '../contexts/SidebarContext.jsx';\nimport { useLeftSidebar } from '../contexts/LeftSidebarContext.jsx';\nimport { useTheme } from '../contexts/ThemeContext.jsx';\nimport {\n  CalendarToday as CalendarIcon,\n  Description as DescriptionIcon,\n  MoreHorizOutlined as MoreHorizOutlinedIcon\n} from '@mui/icons-material';\nimport SearchFilterBar from './SearchFilterBar.jsx';\nimport CustomPagination from './CustomPagination.jsx';\nimport mockOrders from '../data/mockOrders.json';\n\nconst OrderList = () => {\n  const { rightSidebarOpen } = useSidebar();\n  const { leftSidebarOpen } = useLeftSidebar();\n  const { mode } = useTheme();\n  const [orders] = useState(mockOrders);\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortField, setSortField] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [userSortDirection, setUserSortDirection] = useState('asc');\n\n  const getStatusColor = (status) => {\n    const statusColors = {\n      'In Progress': mode === 'light' ? '#8A8CD9' : '#8A8CD9',\n      'Complete': mode === 'light' ? '#4AA785' : '#4AA785',\n      'Pending': mode === 'light' ? '#59A8D4' : '#59A8D4',\n      'Approved': mode === 'light' ? '#FFC555' : '#FFC555',\n      'Rejected': mode === 'light' ? '#1C1C1C66' : '#FFFFFF66'\n    };\n    return statusColors[status] || '#6B7280'; // Default grey\n  };\n\n  const filteredAndSortedOrders = useMemo(() => {\n    let filtered = orders.filter(order => {\n      const matchesSearch = \n        order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.project.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        order.address.toLowerCase().includes(searchTerm.toLowerCase());\n      \n      return matchesSearch;\n    });\n\n    if (sortField) {\n      filtered.sort((a, b) => {\n        let aValue = a[sortField];\n        let bValue = b[sortField];\n        \n        if (sortField === 'user') {\n          aValue = a.user.name;\n          bValue = b.user.name;\n        }\n        \n        if (typeof aValue === 'string') {\n          aValue = aValue.toLowerCase();\n          bValue = bValue.toLowerCase();\n        }\n        \n        if (sortDirection === 'asc') {\n          return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n        } else {\n          return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  }, [orders, searchTerm, sortField, sortDirection]);\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = filteredAndSortedOrders.map((order) => order.id);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (newPage) => {\n    setPage(newPage - 1); // Convert to 0-based index\n  };\n\n  const handlePrevious = () => {\n    if (page > 0) {\n      setPage(page - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (page < Math.ceil(filteredAndSortedOrders.length / rowsPerPage) - 1) {\n      setPage(page + 1);\n    }\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSort = (field) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  const handleUserSortToggle = () => {\n    const newDirection = userSortDirection === 'asc' ? 'desc' : 'asc';\n    setUserSortDirection(newDirection);\n    setSortField('user');\n    setSortDirection(newDirection);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - filteredAndSortedOrders.length) : 0;\n\n  // Calculate available width based on sidebar states\n  const leftSidebarWidth = leftSidebarOpen ? 260 : 0;\n  const rightSidebarWidth = rightSidebarOpen ? 250 : 0;\n  const availableWidth = `calc(100vw - ${leftSidebarWidth + rightSidebarWidth}px)`;\n\n  return (\n    <Fade in={true} timeout={600}>\n      <Box sx={{ \n        width: '100%', \n        maxWidth: availableWidth,\n        py: 2, \n        margin: 0, \n        paddingLeft: 4, \n        paddingRight: 2, \n        overflow: 'hidden',\n        boxSizing: 'border-box',\n        '&::-webkit-scrollbar': {\n          height: '8px',\n          width: '8px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: '#f1f1f1',\n          borderRadius: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: '#c1c1c1',\n          borderRadius: '4px',\n          '&:hover': {\n            backgroundColor: '#a8a8a8',\n          },\n        },\n      }}>\n      <Slide in={true} direction=\"down\" timeout={800}>\n        <Typography  sx={{ mb: 3, fontSize: '14px', fontWeight: 600 }}>\n          Order List\n        </Typography>\n      </Slide>\n      \n      {/* Search and Filter Bar */}\n      <SearchFilterBar \n        searchTerm={searchTerm}\n        onSearchChange={setSearchTerm}\n        onSortToggle={handleUserSortToggle}\n        sortDirection={userSortDirection}\n      />\n\n      <Grow in={true} timeout={1000}>\n        <TableContainer sx={{ \n          border: 'none', \n          width: '100%', \n          maxWidth: '100%',\n          overflow: 'auto',\n          maxHeight: 'calc(100vh - 200px)', // Prevent vertical overflow\n        boxSizing: 'border-box',\n        overflowX: 'scroll', // Force horizontal scrollbar to always show\n        overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n          height: '8px',\n          width: '8px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: '#f1f1f1',\n          borderRadius: '4px',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: '#c1c1c1',\n          borderRadius: '4px',\n          '&:hover': {\n            backgroundColor: '#a8a8a8',\n          },\n        },\n        '&::-webkit-scrollbar-corner': {\n          backgroundColor: '#f1f1f1',\n        },\n      }}>\n        <Table sx={{ \n          minWidth: 800, // Minimum width for content\n          border: 'none', \n          width: '100%', \n          maxWidth: '100%',\n          tableLayout: 'fixed', // Fixed layout for better control\n          '& .MuiTableCell-root': {\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap',\n          }\n        }} aria-label=\"order table\">\n          <TableHead sx={{ \n            position: 'sticky', \n            top: 0, \n            zIndex: 10, \n            backgroundColor: mode === 'light' ? 'white' : '#1e1e1e'\n          }}>\n            <TableRow sx={{ height: '40px' }}>\n              <TableCell \n                padding=\"checkbox\" \n                sx={{ \n                  width: '5%',\n                  height: '40px',\n                  fontSize: '12px',\n                  fontWeight: 400,\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n              >\n                <Checkbox\n                  indeterminate={selected.length > 0 && selected.length < filteredAndSortedOrders.length}\n                  checked={filteredAndSortedOrders.length > 0 && selected.length === filteredAndSortedOrders.length}\n                  onChange={handleSelectAllClick}\n                  size=\"small\"\n                  sx={{\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 16,\n                    },\n                    color: mode === 'light' ? 'black' : '#C6C7F8',\n                    '&.Mui-checked': {\n                      color: mode === 'light' ? 'black' : '#C6C7F8',\n                    },\n                    '&.MuiCheckbox-indeterminate': {\n                      color: mode === 'light' ? 'black' : '#C6C7F8',\n                    }\n                  }}\n                />\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '10%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                }}\n                onClick={() => handleSort('id')}\n              >\n                Order ID\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '18%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                }}\n                onClick={() => handleSort('user')}\n              >\n                User\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '18%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n                onClick={() => handleSort('project')}\n              >\n                Project\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '25%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n                onClick={() => handleSort('address')}\n              >\n                Address\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '15%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n                onClick={() => handleSort('date')}\n              >\n                Date\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  cursor: 'pointer', \n                  width: '12%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n                onClick={() => handleSort('status')}\n              >\n                Status\n              </TableCell>\n              <TableCell \n                sx={{ \n                  fontWeight: 400, \n                  width: '5%',\n                  height: '40px',\n                  fontSize: '12px',\n                  color: mode === 'light' ? '#1C1C1C66' : '#ffffff66',\n                  padding: 0,\n                  \n                }}\n              >\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredAndSortedOrders\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((order) => {\n                const isItemSelected = isSelected(order.id);\n                return (\n                  <TableRow\n                    hover\n                    key={order.id}\n                    selected={isItemSelected}\n                    sx={{\n                      '&:hover': {\n                        backgroundColor: '#f8f9fa',\n                      },\n                      '&.Mui-selected': {\n                        backgroundColor: mode === 'light' ? '#f5f5f5' : '#FFFFFF1A',\n                        borderLeft: `4px solid ${mode === 'light' ? 'black' : '#C6C7F8'}`,\n                      }\n                    }}\n                  >\n                    <TableCell padding=\"checkbox\" sx={{ width: '5%', py: 1, px: 0 }}>\n                      <Checkbox\n                        checked={isItemSelected}\n                        onChange={(event) => handleClick(event, order.id)}\n                        size=\"small\"\n                        sx={{\n                          '& .MuiSvgIcon-root': {\n                            fontSize: 16,\n                          },\n                          color: mode === 'light' ? 'black' : '#C6C7F8',\n                          '&.Mui-checked': {\n                            color: mode === 'light' ? 'black' : '#C6C7F8',\n                          }\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell sx={{ fontWeight: 'medium', width: '10%', py: 1, px: 0, fontSize: '12px' }}>\n                      {order.id}\n                    </TableCell>\n                    <TableCell sx={{ width: '18%', py: 1, px: 0, fontSize: '12px' }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Avatar \n                          src={order.user.avatar}\n                          sx={{ \n                            width: 24, \n                            height: 24, \n                            flexShrink: 0,\n                            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n                          }}\n                        >\n                          {order.user.name.split(' ').map(n => n[0]).join('')}\n                        </Avatar>\n                        <Typography variant=\"body2\" sx={{ fontSize: '12px' }}>{order.user.name}</Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell sx={{ width: '18%', py: 1, px: 0, fontSize: '12px' }}>{order.project}</TableCell>\n                    <TableCell sx={{ width: '25%', py: 1, px: 0, fontSize: '12px' }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Typography variant=\"body2\" sx={{ fontSize: '12px' }}>{order.address}</Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell sx={{ width: '15%', py: 1, px: 0, fontSize: '12px' }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <CalendarIcon sx={{ fontSize: 16, color: 'text.secondary', flexShrink: 0 }} />\n                        <Typography variant=\"body2\" sx={{ fontSize: '12px' }}>{order.date}</Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell sx={{ width: '12%', py: 1, px: 0, fontSize: '12px' }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        <Box\n                          sx={{\n                            width: 8,\n                            height: 8,\n                            borderRadius: '50%',\n                            backgroundColor: getStatusColor(order.status),\n                            flexShrink: 0\n                          }}\n                        />\n                        <Typography\n                          sx={{\n                            fontSize: '12px',\n                            fontWeight: 'medium',\n                            color: getStatusColor(order.status)\n                          }}\n                        >\n                          {order.status}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell sx={{ width: '5%', py: 1, px: 0, fontSize: '12px' }}>\n                      {isItemSelected && (\n                        <Tooltip title=\"More actions\">\n                          <IconButton size=\"small\">\n                            <MoreHorizOutlinedIcon sx={{ color: mode === 'light' ? 'black' : 'white' }} />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </TableCell>\n                    </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={8} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </Grow>\n\n      <Slide in={true} direction=\"up\" timeout={1200}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Rows per page:\n          </Typography>\n          <FormControl size=\"small\" sx={{ minWidth: 80 }}>\n            <Select\n              value={rowsPerPage}\n              onChange={handleChangeRowsPerPage}\n              displayEmpty\n            >\n              <MenuItem value={5}>5</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={25}>25</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n        \n        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <CustomPagination\n            currentPage={page + 1}\n            totalPages={Math.ceil(filteredAndSortedOrders.length / rowsPerPage)}\n            onPageChange={handleChangePage}\n            onPrevious={handlePrevious}\n            onNext={handleNext}\n          />\n        </Box>\n      </Box>\n      </Slide>\n      </Box>\n    </Fade>\n  );\n};\n\nexport default OrderList;\n"],"names":["_ref","searchTerm","onSearchChange","onSortToggle","sortDirection","mode","useTheme","_jsxs","Box","sx","display","alignItems","justifyContent","p","backgroundColor","borderRadius","mb","children","gap","_jsx","Tooltip","title","IconButton","size","width","height","color","cursor","transform","AddIcon","fontSize","FilterIcon","concat","onClick","LuArrowDownUp","TextField","placeholder","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","FiSearch","minWidth","borderColor","opacity","currentPage","totalPages","onPageChange","onPrevious","onNext","pageNumbers","getPageNumbers","pages","i","push","maxWidth","disabled","KeyboardArrowLeft","map","page","fontWeight","transition","Typography","variant","KeyboardArrowRight","OrderList","rightSidebarOpen","useSidebar","leftSidebarOpen","useLeftSidebar","orders","useState","mockOrders","selected","setSelected","setPage","rowsPerPage","setRowsPerPage","setSearchTerm","sortField","setSortField","setSortDirection","userSortDirection","setUserSortDirection","getStatusColor","status","filteredAndSortedOrders","useMemo","filtered","filter","order","id","toLowerCase","includes","user","name","project","address","sort","a","b","aValue","bValue","handleSort","field","emptyRows","Math","max","length","availableWidth","Fade","in","timeout","py","margin","paddingLeft","paddingRight","overflow","boxSizing","Slide","direction","SearchFilterBar","handleUserSortToggle","newDirection","Grow","TableContainer","border","maxHeight","overflowX","overflowY","Table","tableLayout","textOverflow","whiteSpace","TableHead","top","zIndex","TableRow","TableCell","padding","Checkbox","indeterminate","checked","event","newSelected","TableBody","slice","isItemSelected","indexOf","hover","borderLeft","px","handleClick","selectedIndex","Avatar","src","avatar","flexShrink","boxShadow","split","n","join","CalendarIcon","date","MoreHorizOutlinedIcon","style","colSpan","mt","FormControl","Select","parseInt","displayEmpty","MenuItem","CustomPagination","ceil","newPage","handlePrevious","handleNext"],"sourceRoot":""}